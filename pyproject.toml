[tool.poetry]
name = "my-project-name"
version = "0.1.0"
description = "A short description of my new project."
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.4.8"
pytest = ">=8.1.1"
coverage = ">=7.5.0"
pytest-cov = ">=5.0.0"
mypy = ">=1.15.0"
pre-commit = "4.2.0"

[tool.ruff]
# Standard-Line-Length für alle Tools
line-length = 88
# Pfade, die von Ruff ignoriert werden sollen (bleibt unter [tool.ruff])
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "build",
    "dist",
    "venv",
    ".venv",
]

[tool.ruff.lint] # <-- NEUER ABSCHNITT FÜR LINTER-SPEZIFISCHE EINSTELLUNGEN
# Ausgewählte Linter-Regeln
select = [
    "E",    # Error (Pyflake's)
    "F",    # Flake8
    "I",    # isort (Import-Sortierung)
    #"W",    # Warning (Pyflake's)
    #"N",    # Naming conventions
    #"UP",  # Pyupgrade (Code-Modernisierung)
    #"C4",  # Comprehensions
    #"B",    # Bugbear
    #"A",    # Ambiguous variable names
    #"TID", # Tidy imports
    #"PL",  # Pylint
]
# Regeln, die ignoriert werden sollen
ignore = [
    "E501",    # Line too long
    "C901",    # Too complex (Funktion zu komplex - oft ein heißes Thema, kann ignoriert werden)
    "PLR0913", # Too many arguments in function (auch ein heißes Thema)
]

[tool.mypy]
# Strikter Modus für Mypy
strict = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.coverage.run]
branch = true
source = ["my-project-name"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
