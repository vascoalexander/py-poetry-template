ARG PYTHON_VERSION=3.12
FROM debian:bookworm-slim

ARG USERNAME=appuser
ARG USER_UID=1000
ARG USER_GID=1000

# Systempakete
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl git zsh unzip ca-certificates build-essential sudo python3 python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Git: /app als sicher markieren
RUN git config --global --add safe.directory /workspace

# App-User mit UID/GID des Hosts
RUN groupadd --gid ${USER_GID} ${USERNAME} \
    && useradd --uid ${USER_UID} --gid ${USER_GID} -m ${USERNAME} \
    && usermod -aG sudo ${USERNAME}

# Mise Setup
ENV MISE_HOME="/home/${USERNAME}/.local/share/mise"
ENV PATH="/home/${USERNAME}/.local/share/mise/shims:/home/${USERNAME}/.local/bin:$PATH"

USER ${USERNAME}
WORKDIR /workspace

# Mise installieren
RUN curl -sSf https://mise.run | sh

# mise aktivieren (nicht nur bashrc!)
RUN echo 'eval "$(mise activate bash)"' >> /home/${USERNAME}/.bashrc \
    && echo 'eval "$(mise activate zsh)"' >> /home/${USERNAME}/.zshrc

# mise plugins sicherstellen
COPY --chown=${USER_UID}:${USER_GID} .tool-versions ./

RUN mise plugin add python && mise plugin add poetry && mise install

# Poetry global konfigurieren
RUN mise exec -- poetry config virtualenvs.in-project false

# Abhängigkeiten installieren
COPY --chown=${USER_UID}:${USER_GID} pyproject.toml poetry.lock ./
RUN mise exec -- poetry install --no-root --sync --with dev \
    && mkdir -p /home/${USERNAME}/.cache/pypoetry/virtualenvs \
    && chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/.cache/pypoetry \
    && chown -R ${USERNAME}:${USERNAME} ${MISE_HOME}

# Restlicher Code (letzter Schritt für Caching)
COPY --chown=${USER_UID}:${USER_GID} . .

CMD ["bash"]
